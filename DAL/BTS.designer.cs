#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BTS")]
	public partial class BTSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertBackup(Backup instance);
    partial void UpdateBackup(Backup instance);
    partial void DeleteBackup(Backup instance);
    partial void InsertBitacora(Bitacora instance);
    partial void UpdateBitacora(Bitacora instance);
    partial void DeleteBitacora(Bitacora instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertControlSistema(ControlSistema instance);
    partial void UpdateControlSistema(ControlSistema instance);
    partial void DeleteControlSistema(ControlSistema instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertIdioma(Idioma instance);
    partial void UpdateIdioma(Idioma instance);
    partial void DeleteIdioma(Idioma instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertNotaDePedido(NotaDePedido instance);
    partial void UpdateNotaDePedido(NotaDePedido instance);
    partial void DeleteNotaDePedido(NotaDePedido instance);
    partial void InsertOrdenCompra(OrdenCompra instance);
    partial void UpdateOrdenCompra(OrdenCompra instance);
    partial void DeleteOrdenCompra(OrdenCompra instance);
    partial void InsertOrdenPago(OrdenPago instance);
    partial void UpdateOrdenPago(OrdenPago instance);
    partial void DeleteOrdenPago(OrdenPago instance);
    partial void InsertPermiso(Permiso instance);
    partial void UpdatePermiso(Permiso instance);
    partial void DeletePermiso(Permiso instance);
    partial void InsertPermisoRol(PermisoRol instance);
    partial void UpdatePermisoRol(PermisoRol instance);
    partial void DeletePermisoRol(PermisoRol instance);
    partial void InsertPrecio(Precio instance);
    partial void UpdatePrecio(Precio instance);
    partial void DeletePrecio(Precio instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProductosxNP(ProductosxNP instance);
    partial void UpdateProductosxNP(ProductosxNP instance);
    partial void DeleteProductosxNP(ProductosxNP instance);
    partial void InsertProductosxOC(ProductosxOC instance);
    partial void UpdateProductosxOC(ProductosxOC instance);
    partial void DeleteProductosxOC(ProductosxOC instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertRecibo(Recibo instance);
    partial void UpdateRecibo(Recibo instance);
    partial void DeleteRecibo(Recibo instance);
    partial void InsertRemito(Remito instance);
    partial void UpdateRemito(Remito instance);
    partial void DeleteRemito(Remito instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertTraduccion(Traduccion instance);
    partial void UpdateTraduccion(Traduccion instance);
    partial void DeleteTraduccion(Traduccion instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertUsuarioRol(UsuarioRol instance);
    partial void UpdateUsuarioRol(UsuarioRol instance);
    partial void DeleteUsuarioRol(UsuarioRol instance);
    #endregion
		
		public BTSDataContext() : 
				base(global::DAL.Properties.Settings.Default.BTSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BTSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BTSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BTSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BTSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Backup> Backup
		{
			get
			{
				return this.GetTable<Backup>();
			}
		}
		
		public System.Data.Linq.Table<Bitacora> Bitacora
		{
			get
			{
				return this.GetTable<Bitacora>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<ControlSistema> ControlSistema
		{
			get
			{
				return this.GetTable<ControlSistema>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresa
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Factura
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Idioma> Idioma
		{
			get
			{
				return this.GetTable<Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marca
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelo
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<NotaDePedido> NotaDePedido
		{
			get
			{
				return this.GetTable<NotaDePedido>();
			}
		}
		
		public System.Data.Linq.Table<OrdenCompra> OrdenCompra
		{
			get
			{
				return this.GetTable<OrdenCompra>();
			}
		}
		
		public System.Data.Linq.Table<OrdenPago> OrdenPago
		{
			get
			{
				return this.GetTable<OrdenPago>();
			}
		}
		
		public System.Data.Linq.Table<Permiso> Permiso
		{
			get
			{
				return this.GetTable<Permiso>();
			}
		}
		
		public System.Data.Linq.Table<PermisoRol> PermisoRol
		{
			get
			{
				return this.GetTable<PermisoRol>();
			}
		}
		
		public System.Data.Linq.Table<Precio> Precio
		{
			get
			{
				return this.GetTable<Precio>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<ProductosxNP> ProductosxNP
		{
			get
			{
				return this.GetTable<ProductosxNP>();
			}
		}
		
		public System.Data.Linq.Table<ProductosxOC> ProductosxOC
		{
			get
			{
				return this.GetTable<ProductosxOC>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedor
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Recibo> Recibo
		{
			get
			{
				return this.GetTable<Recibo>();
			}
		}
		
		public System.Data.Linq.Table<Remito> Remito
		{
			get
			{
				return this.GetTable<Remito>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<Traduccion> Traduccion
		{
			get
			{
				return this.GetTable<Traduccion>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioRol> UsuarioRol
		{
			get
			{
				return this.GetTable<UsuarioRol>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertarUsuario")]
		public int InsertarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(50)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdIdioma", DbType="Int")] System.Nullable<int> idIdioma, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dni", DbType="Int")] System.Nullable<int> dni)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, nombre, apellido, password, estado, idIdioma, dni);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActualizarUsuario")]
		public int ActualizarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(50)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdIdioma", DbType="Int")] System.Nullable<int> idIdioma, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dni", DbType="Int")] System.Nullable<int> dni)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idUsuario, userName, nombre, apellido, password, estado, idIdioma, dni);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Borrarusuario")]
		public int Borrarusuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdAdministrador", DbType="Int")] System.Nullable<int> idAdministrador)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idUsuario, idAdministrador);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Backup]")]
	public partial class Backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NombreArchivo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Destino;
		
		private string _Origen;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreArchivoChanging(string value);
    partial void OnNombreArchivoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnDestinoChanging(string value);
    partial void OnDestinoChanged();
    partial void OnOrigenChanging(string value);
    partial void OnOrigenChanged();
    #endregion
		
		public Backup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreArchivo", DbType="VarChar(50)")]
		public string NombreArchivo
		{
			get
			{
				return this._NombreArchivo;
			}
			set
			{
				if ((this._NombreArchivo != value))
				{
					this.OnNombreArchivoChanging(value);
					this.SendPropertyChanging();
					this._NombreArchivo = value;
					this.SendPropertyChanged("NombreArchivo");
					this.OnNombreArchivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destino", DbType="VarChar(50)")]
		public string Destino
		{
			get
			{
				return this._Destino;
			}
			set
			{
				if ((this._Destino != value))
				{
					this.OnDestinoChanging(value);
					this.SendPropertyChanging();
					this._Destino = value;
					this.SendPropertyChanged("Destino");
					this.OnDestinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origen", DbType="VarChar(50)")]
		public string Origen
		{
			get
			{
				return this._Origen;
			}
			set
			{
				if ((this._Origen != value))
				{
					this.OnOrigenChanging(value);
					this.SendPropertyChanging();
					this._Origen = value;
					this.SendPropertyChanged("Origen");
					this.OnOrigenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bitacora")]
	public partial class Bitacora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBitacora;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _TipoEvento;
		
		private string _Usuario;
		
		private string _EntidadInvolucrada;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBitacoraChanging(int value);
    partial void OnIdBitacoraChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnTipoEventoChanging(string value);
    partial void OnTipoEventoChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnEntidadInvolucradaChanging(string value);
    partial void OnEntidadInvolucradaChanged();
    #endregion
		
		public Bitacora()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBitacora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBitacora
		{
			get
			{
				return this._IdBitacora;
			}
			set
			{
				if ((this._IdBitacora != value))
				{
					this.OnIdBitacoraChanging(value);
					this.SendPropertyChanging();
					this._IdBitacora = value;
					this.SendPropertyChanged("IdBitacora");
					this.OnIdBitacoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoEvento", DbType="VarChar(50)")]
		public string TipoEvento
		{
			get
			{
				return this._TipoEvento;
			}
			set
			{
				if ((this._TipoEvento != value))
				{
					this.OnTipoEventoChanging(value);
					this.SendPropertyChanging();
					this._TipoEvento = value;
					this.SendPropertyChanged("TipoEvento");
					this.OnTipoEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(50)")]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntidadInvolucrada", DbType="VarChar(50)")]
		public string EntidadInvolucrada
		{
			get
			{
				return this._EntidadInvolucrada;
			}
			set
			{
				if ((this._EntidadInvolucrada != value))
				{
					this.OnEntidadInvolucradaChanging(value);
					this.SendPropertyChanging();
					this._EntidadInvolucrada = value;
					this.SendPropertyChanged("EntidadInvolucrada");
					this.OnEntidadInvolucradaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodCliente;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _DomicilioEntrega;
		
		private string _DomicilioFact;
		
		private string _Pass;
		
		private System.Nullable<int> _Dni;
		
		private EntitySet<Factura> _Factura;
		
		private EntitySet<NotaDePedido> _NotaDePedido;
		
		private EntitySet<Recibo> _Recibo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDomicilioEntregaChanging(string value);
    partial void OnDomicilioEntregaChanged();
    partial void OnDomicilioFactChanging(string value);
    partial void OnDomicilioFactChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnDniChanging(System.Nullable<int> value);
    partial void OnDniChanged();
    #endregion
		
		public Cliente()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			this._NotaDePedido = new EntitySet<NotaDePedido>(new Action<NotaDePedido>(this.attach_NotaDePedido), new Action<NotaDePedido>(this.detach_NotaDePedido));
			this._Recibo = new EntitySet<Recibo>(new Action<Recibo>(this.attach_Recibo), new Action<Recibo>(this.detach_Recibo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomicilioEntrega", DbType="VarChar(50)")]
		public string DomicilioEntrega
		{
			get
			{
				return this._DomicilioEntrega;
			}
			set
			{
				if ((this._DomicilioEntrega != value))
				{
					this.OnDomicilioEntregaChanging(value);
					this.SendPropertyChanging();
					this._DomicilioEntrega = value;
					this.SendPropertyChanged("DomicilioEntrega");
					this.OnDomicilioEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomicilioFact", DbType="VarChar(50)")]
		public string DomicilioFact
		{
			get
			{
				return this._DomicilioFact;
			}
			set
			{
				if ((this._DomicilioFact != value))
				{
					this.OnDomicilioFactChanging(value);
					this.SendPropertyChanging();
					this._DomicilioFact = value;
					this.SendPropertyChanged("DomicilioFact");
					this.OnDomicilioFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dni", DbType="Int")]
		public System.Nullable<int> Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Factura", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_NotaDePedido", Storage="_NotaDePedido", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<NotaDePedido> NotaDePedido
		{
			get
			{
				return this._NotaDePedido;
			}
			set
			{
				this._NotaDePedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Recibo", Storage="_Recibo", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<Recibo> Recibo
		{
			get
			{
				return this._Recibo;
			}
			set
			{
				this._Recibo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_NotaDePedido(NotaDePedido entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_NotaDePedido(NotaDePedido entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Recibo(Recibo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Recibo(Recibo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlSistema")]
	public partial class ControlSistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdControl;
		
		private string _NombreControl;
		
		private string _Descripcion;
		
		private string _UbicacionControl;
		
		private EntitySet<Traduccion> _Traduccion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdControlChanging(int value);
    partial void OnIdControlChanged();
    partial void OnNombreControlChanging(string value);
    partial void OnNombreControlChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnUbicacionControlChanging(string value);
    partial void OnUbicacionControlChanged();
    #endregion
		
		public ControlSistema()
		{
			this._Traduccion = new EntitySet<Traduccion>(new Action<Traduccion>(this.attach_Traduccion), new Action<Traduccion>(this.detach_Traduccion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdControl", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdControl
		{
			get
			{
				return this._IdControl;
			}
			set
			{
				if ((this._IdControl != value))
				{
					this.OnIdControlChanging(value);
					this.SendPropertyChanging();
					this._IdControl = value;
					this.SendPropertyChanged("IdControl");
					this.OnIdControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreControl", DbType="VarChar(50)")]
		public string NombreControl
		{
			get
			{
				return this._NombreControl;
			}
			set
			{
				if ((this._NombreControl != value))
				{
					this.OnNombreControlChanging(value);
					this.SendPropertyChanging();
					this._NombreControl = value;
					this.SendPropertyChanged("NombreControl");
					this.OnNombreControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UbicacionControl", DbType="VarChar(50)")]
		public string UbicacionControl
		{
			get
			{
				return this._UbicacionControl;
			}
			set
			{
				if ((this._UbicacionControl != value))
				{
					this.OnUbicacionControlChanging(value);
					this.SendPropertyChanging();
					this._UbicacionControl = value;
					this.SendPropertyChanged("UbicacionControl");
					this.OnUbicacionControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlSistema_Traduccion", Storage="_Traduccion", ThisKey="IdControl", OtherKey="IdControl")]
		public EntitySet<Traduccion> Traduccion
		{
			get
			{
				return this._Traduccion;
			}
			set
			{
				this._Traduccion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Traduccion(Traduccion entity)
		{
			this.SendPropertyChanging();
			entity.ControlSistema = this;
		}
		
		private void detach_Traduccion(Traduccion entity)
		{
			this.SendPropertyChanging();
			entity.ControlSistema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresa")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RazonSocial;
		
		private string _Nombre;
		
		private string _Domicilio;
		
		private string _Telefono;
		
		private System.Nullable<int> _Cuit;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCuitChanging(System.Nullable<int> value);
    partial void OnCuitChanged();
    #endregion
		
		public Empresa()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RazonSocial", DbType="VarChar(50)")]
		public string RazonSocial
		{
			get
			{
				return this._RazonSocial;
			}
			set
			{
				if ((this._RazonSocial != value))
				{
					this.OnRazonSocialChanging(value);
					this.SendPropertyChanging();
					this._RazonSocial = value;
					this.SendPropertyChanged("RazonSocial");
					this.OnRazonSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domicilio", DbType="VarChar(50)")]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuit", DbType="Int")]
		public System.Nullable<int> Cuit
		{
			get
			{
				return this._Cuit;
			}
			set
			{
				if ((this._Cuit != value))
				{
					this.OnCuitChanging(value);
					this.SendPropertyChanging();
					this._Cuit = value;
					this.SendPropertyChanged("Cuit");
					this.OnCuitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroFactura;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Cantidad;
		
		private System.Nullable<double> _PrecioTotal;
		
		private System.Nullable<int> _CodCliente;
		
		private System.Nullable<int> _NroPedido;
		
		private EntitySet<Recibo> _Recibo;
		
		private EntitySet<Remito> _Remito;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<NotaDePedido> _NotaDePedido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroFacturaChanging(int value);
    partial void OnNroFacturaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnPrecioTotalChanging(System.Nullable<double> value);
    partial void OnPrecioTotalChanged();
    partial void OnCodClienteChanging(System.Nullable<int> value);
    partial void OnCodClienteChanged();
    partial void OnNroPedidoChanging(System.Nullable<int> value);
    partial void OnNroPedidoChanged();
    #endregion
		
		public Factura()
		{
			this._Recibo = new EntitySet<Recibo>(new Action<Recibo>(this.attach_Recibo), new Action<Recibo>(this.detach_Recibo));
			this._Remito = new EntitySet<Remito>(new Action<Remito>(this.attach_Remito), new Action<Remito>(this.detach_Remito));
			this._Cliente = default(EntityRef<Cliente>);
			this._NotaDePedido = default(EntityRef<NotaDePedido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroFactura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroFactura
		{
			get
			{
				return this._NroFactura;
			}
			set
			{
				if ((this._NroFactura != value))
				{
					this.OnNroFacturaChanging(value);
					this.SendPropertyChanging();
					this._NroFactura = value;
					this.SendPropertyChanged("NroFactura");
					this.OnNroFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioTotal", DbType="Float")]
		public System.Nullable<double> PrecioTotal
		{
			get
			{
				return this._PrecioTotal;
			}
			set
			{
				if ((this._PrecioTotal != value))
				{
					this.OnPrecioTotalChanging(value);
					this.SendPropertyChanging();
					this._PrecioTotal = value;
					this.SendPropertyChanged("PrecioTotal");
					this.OnPrecioTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int")]
		public System.Nullable<int> CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPedido", DbType="Int")]
		public System.Nullable<int> NroPedido
		{
			get
			{
				return this._NroPedido;
			}
			set
			{
				if ((this._NroPedido != value))
				{
					if (this._NotaDePedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroPedidoChanging(value);
					this.SendPropertyChanging();
					this._NroPedido = value;
					this.SendPropertyChanged("NroPedido");
					this.OnNroPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Recibo", Storage="_Recibo", ThisKey="NroFactura", OtherKey="NroFactura")]
		public EntitySet<Recibo> Recibo
		{
			get
			{
				return this._Recibo;
			}
			set
			{
				this._Recibo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Remito", Storage="_Remito", ThisKey="NroFactura", OtherKey="NroFactura")]
		public EntitySet<Remito> Remito
		{
			get
			{
				return this._Remito;
			}
			set
			{
				this._Remito.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Factura", Storage="_Cliente", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_Factura", Storage="_NotaDePedido", ThisKey="NroPedido", OtherKey="NroPedido", IsForeignKey=true)]
		public NotaDePedido NotaDePedido
		{
			get
			{
				return this._NotaDePedido.Entity;
			}
			set
			{
				NotaDePedido previousValue = this._NotaDePedido.Entity;
				if (((previousValue != value) 
							|| (this._NotaDePedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotaDePedido.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._NotaDePedido.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._NroPedido = value.NroPedido;
					}
					else
					{
						this._NroPedido = default(Nullable<int>);
					}
					this.SendPropertyChanged("NotaDePedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recibo(Recibo entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Recibo(Recibo entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
		
		private void attach_Remito(Remito entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Remito(Remito entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idioma")]
	public partial class Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIdioma;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<Traduccion> _Traduccion;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIdiomaChanging(int value);
    partial void OnIdIdiomaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Idioma()
		{
			this._Traduccion = new EntitySet<Traduccion>(new Action<Traduccion>(this.attach_Traduccion), new Action<Traduccion>(this.detach_Traduccion));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIdioma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIdioma
		{
			get
			{
				return this._IdIdioma;
			}
			set
			{
				if ((this._IdIdioma != value))
				{
					this.OnIdIdiomaChanging(value);
					this.SendPropertyChanging();
					this._IdIdioma = value;
					this.SendPropertyChanged("IdIdioma");
					this.OnIdIdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Traduccion", Storage="_Traduccion", ThisKey="IdIdioma", OtherKey="IdIdioma")]
		public EntitySet<Traduccion> Traduccion
		{
			get
			{
				return this._Traduccion;
			}
			set
			{
				this._Traduccion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Usuario", Storage="_Usuario", ThisKey="IdIdioma", OtherKey="IdIdioma")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Traduccion(Traduccion entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = this;
		}
		
		private void detach_Traduccion(Traduccion entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMarca;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<OrdenCompra> _OrdenCompra;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMarcaChanging(int value);
    partial void OnIdMarcaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Marca()
		{
			this._OrdenCompra = new EntitySet<OrdenCompra>(new Action<OrdenCompra>(this.attach_OrdenCompra), new Action<OrdenCompra>(this.detach_OrdenCompra));
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMarca", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMarca
		{
			get
			{
				return this._IdMarca;
			}
			set
			{
				if ((this._IdMarca != value))
				{
					this.OnIdMarcaChanging(value);
					this.SendPropertyChanging();
					this._IdMarca = value;
					this.SendPropertyChanged("IdMarca");
					this.OnIdMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_OrdenCompra", Storage="_OrdenCompra", ThisKey="IdMarca", OtherKey="IdMarca")]
		public EntitySet<OrdenCompra> OrdenCompra
		{
			get
			{
				return this._OrdenCompra;
			}
			set
			{
				this._OrdenCompra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Producto", Storage="_Producto", ThisKey="IdMarca", OtherKey="IdMarca")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdModelo;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<OrdenCompra> _OrdenCompra;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdModeloChanging(int value);
    partial void OnIdModeloChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Modelo()
		{
			this._OrdenCompra = new EntitySet<OrdenCompra>(new Action<OrdenCompra>(this.attach_OrdenCompra), new Action<OrdenCompra>(this.detach_OrdenCompra));
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					this.OnIdModeloChanging(value);
					this.SendPropertyChanging();
					this._IdModelo = value;
					this.SendPropertyChanged("IdModelo");
					this.OnIdModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_OrdenCompra", Storage="_OrdenCompra", ThisKey="IdModelo", OtherKey="IdModelo")]
		public EntitySet<OrdenCompra> OrdenCompra
		{
			get
			{
				return this._OrdenCompra;
			}
			set
			{
				this._OrdenCompra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Producto", Storage="_Producto", ThisKey="IdModelo", OtherKey="IdModelo")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotaDePedido")]
	public partial class NotaDePedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroPedido;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _CodCliente;
		
		private string _Descripcion;
		
		private System.Nullable<double> _PrecioTotal;
		
		private string _Estado;
		
		private string _TipoOperacion;
		
		private string _PeriodoAlquiler;
		
		private EntitySet<Factura> _Factura;
		
		private EntitySet<ProductosxNP> _ProductosxNP;
		
		private EntitySet<Remito> _Remito;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroPedidoChanging(int value);
    partial void OnNroPedidoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnCodClienteChanging(System.Nullable<int> value);
    partial void OnCodClienteChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioTotalChanging(System.Nullable<double> value);
    partial void OnPrecioTotalChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnTipoOperacionChanging(string value);
    partial void OnTipoOperacionChanged();
    partial void OnPeriodoAlquilerChanging(string value);
    partial void OnPeriodoAlquilerChanged();
    #endregion
		
		public NotaDePedido()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			this._ProductosxNP = new EntitySet<ProductosxNP>(new Action<ProductosxNP>(this.attach_ProductosxNP), new Action<ProductosxNP>(this.detach_ProductosxNP));
			this._Remito = new EntitySet<Remito>(new Action<Remito>(this.attach_Remito), new Action<Remito>(this.detach_Remito));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroPedido
		{
			get
			{
				return this._NroPedido;
			}
			set
			{
				if ((this._NroPedido != value))
				{
					this.OnNroPedidoChanging(value);
					this.SendPropertyChanging();
					this._NroPedido = value;
					this.SendPropertyChanged("NroPedido");
					this.OnNroPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int")]
		public System.Nullable<int> CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioTotal", DbType="Float")]
		public System.Nullable<double> PrecioTotal
		{
			get
			{
				return this._PrecioTotal;
			}
			set
			{
				if ((this._PrecioTotal != value))
				{
					this.OnPrecioTotalChanging(value);
					this.SendPropertyChanging();
					this._PrecioTotal = value;
					this.SendPropertyChanged("PrecioTotal");
					this.OnPrecioTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoOperacion", DbType="VarChar(50)")]
		public string TipoOperacion
		{
			get
			{
				return this._TipoOperacion;
			}
			set
			{
				if ((this._TipoOperacion != value))
				{
					this.OnTipoOperacionChanging(value);
					this.SendPropertyChanging();
					this._TipoOperacion = value;
					this.SendPropertyChanged("TipoOperacion");
					this.OnTipoOperacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodoAlquiler", DbType="VarChar(50)")]
		public string PeriodoAlquiler
		{
			get
			{
				return this._PeriodoAlquiler;
			}
			set
			{
				if ((this._PeriodoAlquiler != value))
				{
					this.OnPeriodoAlquilerChanging(value);
					this.SendPropertyChanging();
					this._PeriodoAlquiler = value;
					this.SendPropertyChanged("PeriodoAlquiler");
					this.OnPeriodoAlquilerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_Factura", Storage="_Factura", ThisKey="NroPedido", OtherKey="NroPedido")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_ProductosxNP", Storage="_ProductosxNP", ThisKey="NroPedido", OtherKey="NroPedido")]
		public EntitySet<ProductosxNP> ProductosxNP
		{
			get
			{
				return this._ProductosxNP;
			}
			set
			{
				this._ProductosxNP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_Remito", Storage="_Remito", ThisKey="NroPedido", OtherKey="NroPedido")]
		public EntitySet<Remito> Remito
		{
			get
			{
				return this._Remito;
			}
			set
			{
				this._Remito.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_NotaDePedido", Storage="_Cliente", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.NotaDePedido.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.NotaDePedido.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = null;
		}
		
		private void attach_ProductosxNP(ProductosxNP entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = this;
		}
		
		private void detach_ProductosxNP(ProductosxNP entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = null;
		}
		
		private void attach_Remito(Remito entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = this;
		}
		
		private void detach_Remito(Remito entity)
		{
			this.SendPropertyChanging();
			entity.NotaDePedido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdenCompra")]
	public partial class OrdenCompra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroOrdenCompra;
		
		private string _CodProveedor;
		
		private System.Nullable<int> _IdProveedor;
		
		private string _TipoInstrumento;
		
		private System.Nullable<int> _IdMarca;
		
		private System.Nullable<int> _IdModelo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _Cantidad;
		
		private string _Descripcion;
		
		private string _Estado;
		
		private EntitySet<OrdenPago> _OrdenPago;
		
		private EntitySet<ProductosxOC> _ProductosxOC;
		
		private EntityRef<Marca> _Marca;
		
		private EntityRef<Modelo> _Modelo;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroOrdenCompraChanging(int value);
    partial void OnNroOrdenCompraChanged();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    partial void OnIdProveedorChanging(System.Nullable<int> value);
    partial void OnIdProveedorChanged();
    partial void OnTipoInstrumentoChanging(string value);
    partial void OnTipoInstrumentoChanged();
    partial void OnIdMarcaChanging(System.Nullable<int> value);
    partial void OnIdMarcaChanged();
    partial void OnIdModeloChanging(System.Nullable<int> value);
    partial void OnIdModeloChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public OrdenCompra()
		{
			this._OrdenPago = new EntitySet<OrdenPago>(new Action<OrdenPago>(this.attach_OrdenPago), new Action<OrdenPago>(this.detach_OrdenPago));
			this._ProductosxOC = new EntitySet<ProductosxOC>(new Action<ProductosxOC>(this.attach_ProductosxOC), new Action<ProductosxOC>(this.detach_ProductosxOC));
			this._Marca = default(EntityRef<Marca>);
			this._Modelo = default(EntityRef<Modelo>);
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroOrdenCompra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroOrdenCompra
		{
			get
			{
				return this._NroOrdenCompra;
			}
			set
			{
				if ((this._NroOrdenCompra != value))
				{
					this.OnNroOrdenCompraChanging(value);
					this.SendPropertyChanging();
					this._NroOrdenCompra = value;
					this.SendPropertyChanged("NroOrdenCompra");
					this.OnNroOrdenCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(50)")]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int")]
		public System.Nullable<int> IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoInstrumento", DbType="VarChar(50)")]
		public string TipoInstrumento
		{
			get
			{
				return this._TipoInstrumento;
			}
			set
			{
				if ((this._TipoInstrumento != value))
				{
					this.OnTipoInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._TipoInstrumento = value;
					this.SendPropertyChanged("TipoInstrumento");
					this.OnTipoInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMarca", DbType="Int")]
		public System.Nullable<int> IdMarca
		{
			get
			{
				return this._IdMarca;
			}
			set
			{
				if ((this._IdMarca != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMarcaChanging(value);
					this.SendPropertyChanging();
					this._IdMarca = value;
					this.SendPropertyChanged("IdMarca");
					this.OnIdMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", DbType="Int")]
		public System.Nullable<int> IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModeloChanging(value);
					this.SendPropertyChanging();
					this._IdModelo = value;
					this.SendPropertyChanged("IdModelo");
					this.OnIdModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenCompra_OrdenPago", Storage="_OrdenPago", ThisKey="NroOrdenCompra", OtherKey="NroOrdenCompra")]
		public EntitySet<OrdenPago> OrdenPago
		{
			get
			{
				return this._OrdenPago;
			}
			set
			{
				this._OrdenPago.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenCompra_ProductosxOC", Storage="_ProductosxOC", ThisKey="NroOrdenCompra", OtherKey="NroOrdenCompra")]
		public EntitySet<ProductosxOC> ProductosxOC
		{
			get
			{
				return this._ProductosxOC;
			}
			set
			{
				this._ProductosxOC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_OrdenCompra", Storage="_Marca", ThisKey="IdMarca", OtherKey="IdMarca", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.OrdenCompra.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.OrdenCompra.Add(this);
						this._IdMarca = value.IdMarca;
					}
					else
					{
						this._IdMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_OrdenCompra", Storage="_Modelo", ThisKey="IdModelo", OtherKey="IdModelo", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.OrdenCompra.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.OrdenCompra.Add(this);
						this._IdModelo = value.IdModelo;
					}
					else
					{
						this._IdModelo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_OrdenCompra", Storage="_Proveedor", ThisKey="IdProveedor", OtherKey="IdProveedor", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.OrdenCompra.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.OrdenCompra.Add(this);
						this._IdProveedor = value.IdProveedor;
					}
					else
					{
						this._IdProveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrdenPago(OrdenPago entity)
		{
			this.SendPropertyChanging();
			entity.OrdenCompra = this;
		}
		
		private void detach_OrdenPago(OrdenPago entity)
		{
			this.SendPropertyChanging();
			entity.OrdenCompra = null;
		}
		
		private void attach_ProductosxOC(ProductosxOC entity)
		{
			this.SendPropertyChanging();
			entity.OrdenCompra = this;
		}
		
		private void detach_ProductosxOC(ProductosxOC entity)
		{
			this.SendPropertyChanging();
			entity.OrdenCompra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdenPago")]
	public partial class OrdenPago : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroOrdenPago;
		
		private System.Nullable<System.DateTime> _FechaFactProv;
		
		private string _NroFactProv;
		
		private string _DetalleFactura;
		
		private System.Nullable<System.DateTime> _FechaPago;
		
		private string _CondicionPago;
		
		private string _Estado;
		
		private System.Nullable<int> _NroOrdenCompra;
		
		private string _CodProveedor;
		
		private System.Nullable<int> _IdProveedor;
		
		private EntityRef<OrdenPago> _OrdenPago2;
		
		private EntityRef<OrdenCompra> _OrdenCompra;
		
		private EntityRef<OrdenPago> _OrdenPago1;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroOrdenPagoChanging(int value);
    partial void OnNroOrdenPagoChanged();
    partial void OnFechaFactProvChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFactProvChanged();
    partial void OnNroFactProvChanging(string value);
    partial void OnNroFactProvChanged();
    partial void OnDetalleFacturaChanging(string value);
    partial void OnDetalleFacturaChanged();
    partial void OnFechaPagoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaPagoChanged();
    partial void OnCondicionPagoChanging(string value);
    partial void OnCondicionPagoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnNroOrdenCompraChanging(System.Nullable<int> value);
    partial void OnNroOrdenCompraChanged();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    partial void OnIdProveedorChanging(System.Nullable<int> value);
    partial void OnIdProveedorChanged();
    #endregion
		
		public OrdenPago()
		{
			this._OrdenPago2 = default(EntityRef<OrdenPago>);
			this._OrdenCompra = default(EntityRef<OrdenCompra>);
			this._OrdenPago1 = default(EntityRef<OrdenPago>);
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroOrdenPago", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroOrdenPago
		{
			get
			{
				return this._NroOrdenPago;
			}
			set
			{
				if ((this._NroOrdenPago != value))
				{
					if (this._OrdenPago1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroOrdenPagoChanging(value);
					this.SendPropertyChanging();
					this._NroOrdenPago = value;
					this.SendPropertyChanged("NroOrdenPago");
					this.OnNroOrdenPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFactProv", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFactProv
		{
			get
			{
				return this._FechaFactProv;
			}
			set
			{
				if ((this._FechaFactProv != value))
				{
					this.OnFechaFactProvChanging(value);
					this.SendPropertyChanging();
					this._FechaFactProv = value;
					this.SendPropertyChanged("FechaFactProv");
					this.OnFechaFactProvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroFactProv", DbType="VarChar(50)")]
		public string NroFactProv
		{
			get
			{
				return this._NroFactProv;
			}
			set
			{
				if ((this._NroFactProv != value))
				{
					this.OnNroFactProvChanging(value);
					this.SendPropertyChanging();
					this._NroFactProv = value;
					this.SendPropertyChanged("NroFactProv");
					this.OnNroFactProvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleFactura", DbType="VarChar(50)")]
		public string DetalleFactura
		{
			get
			{
				return this._DetalleFactura;
			}
			set
			{
				if ((this._DetalleFactura != value))
				{
					this.OnDetalleFacturaChanging(value);
					this.SendPropertyChanging();
					this._DetalleFactura = value;
					this.SendPropertyChanged("DetalleFactura");
					this.OnDetalleFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPago", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaPago
		{
			get
			{
				return this._FechaPago;
			}
			set
			{
				if ((this._FechaPago != value))
				{
					this.OnFechaPagoChanging(value);
					this.SendPropertyChanging();
					this._FechaPago = value;
					this.SendPropertyChanged("FechaPago");
					this.OnFechaPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CondicionPago", DbType="VarChar(50)")]
		public string CondicionPago
		{
			get
			{
				return this._CondicionPago;
			}
			set
			{
				if ((this._CondicionPago != value))
				{
					this.OnCondicionPagoChanging(value);
					this.SendPropertyChanging();
					this._CondicionPago = value;
					this.SendPropertyChanged("CondicionPago");
					this.OnCondicionPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroOrdenCompra", DbType="Int")]
		public System.Nullable<int> NroOrdenCompra
		{
			get
			{
				return this._NroOrdenCompra;
			}
			set
			{
				if ((this._NroOrdenCompra != value))
				{
					if (this._OrdenCompra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroOrdenCompraChanging(value);
					this.SendPropertyChanging();
					this._NroOrdenCompra = value;
					this.SendPropertyChanged("NroOrdenCompra");
					this.OnNroOrdenCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(50)")]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int")]
		public System.Nullable<int> IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenPago_OrdenPago", Storage="_OrdenPago2", ThisKey="NroOrdenPago", OtherKey="NroOrdenPago", IsUnique=true, IsForeignKey=false)]
		public OrdenPago OrdenPago2
		{
			get
			{
				return this._OrdenPago2.Entity;
			}
			set
			{
				OrdenPago previousValue = this._OrdenPago2.Entity;
				if (((previousValue != value) 
							|| (this._OrdenPago2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdenPago2.Entity = null;
						previousValue.OrdenPago1 = null;
					}
					this._OrdenPago2.Entity = value;
					if ((value != null))
					{
						value.OrdenPago1 = this;
					}
					this.SendPropertyChanged("OrdenPago2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenCompra_OrdenPago", Storage="_OrdenCompra", ThisKey="NroOrdenCompra", OtherKey="NroOrdenCompra", IsForeignKey=true)]
		public OrdenCompra OrdenCompra
		{
			get
			{
				return this._OrdenCompra.Entity;
			}
			set
			{
				OrdenCompra previousValue = this._OrdenCompra.Entity;
				if (((previousValue != value) 
							|| (this._OrdenCompra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdenCompra.Entity = null;
						previousValue.OrdenPago.Remove(this);
					}
					this._OrdenCompra.Entity = value;
					if ((value != null))
					{
						value.OrdenPago.Add(this);
						this._NroOrdenCompra = value.NroOrdenCompra;
					}
					else
					{
						this._NroOrdenCompra = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrdenCompra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenPago_OrdenPago", Storage="_OrdenPago1", ThisKey="NroOrdenPago", OtherKey="NroOrdenPago", IsForeignKey=true)]
		public OrdenPago OrdenPago1
		{
			get
			{
				return this._OrdenPago1.Entity;
			}
			set
			{
				OrdenPago previousValue = this._OrdenPago1.Entity;
				if (((previousValue != value) 
							|| (this._OrdenPago1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdenPago1.Entity = null;
						previousValue.OrdenPago2 = null;
					}
					this._OrdenPago1.Entity = value;
					if ((value != null))
					{
						value.OrdenPago2 = this;
						this._NroOrdenPago = value.NroOrdenPago;
					}
					else
					{
						this._NroOrdenPago = default(int);
					}
					this.SendPropertyChanged("OrdenPago1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_OrdenPago", Storage="_Proveedor", ThisKey="IdProveedor", OtherKey="IdProveedor", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.OrdenPago.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.OrdenPago.Add(this);
						this._IdProveedor = value.IdProveedor;
					}
					else
					{
						this._IdProveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permiso")]
	public partial class Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPermiso;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private string _TipoPermiso;
		
		private EntitySet<PermisoRol> _PermisoRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTipoPermisoChanging(string value);
    partial void OnTipoPermisoChanged();
    #endregion
		
		public Permiso()
		{
			this._PermisoRol = new EntitySet<PermisoRol>(new Action<PermisoRol>(this.attach_PermisoRol), new Action<PermisoRol>(this.detach_PermisoRol));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPermiso", DbType="VarChar(50)")]
		public string TipoPermiso
		{
			get
			{
				return this._TipoPermiso;
			}
			set
			{
				if ((this._TipoPermiso != value))
				{
					this.OnTipoPermisoChanging(value);
					this.SendPropertyChanging();
					this._TipoPermiso = value;
					this.SendPropertyChanged("TipoPermiso");
					this.OnTipoPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_PermisoRol", Storage="_PermisoRol", ThisKey="IdPermiso", OtherKey="IdPermiso")]
		public EntitySet<PermisoRol> PermisoRol
		{
			get
			{
				return this._PermisoRol;
			}
			set
			{
				this._PermisoRol.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = this;
		}
		
		private void detach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermisoRol")]
	public partial class PermisoRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPermisoRol;
		
		private System.Nullable<int> _IdRol;
		
		private System.Nullable<int> _IdPermiso;
		
		private EntityRef<Permiso> _Permiso;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPermisoRolChanging(int value);
    partial void OnIdPermisoRolChanged();
    partial void OnIdRolChanging(System.Nullable<int> value);
    partial void OnIdRolChanged();
    partial void OnIdPermisoChanging(System.Nullable<int> value);
    partial void OnIdPermisoChanged();
    #endregion
		
		public PermisoRol()
		{
			this._Permiso = default(EntityRef<Permiso>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermisoRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPermisoRol
		{
			get
			{
				return this._IdPermisoRol;
			}
			set
			{
				if ((this._IdPermisoRol != value))
				{
					this.OnIdPermisoRolChanging(value);
					this.SendPropertyChanging();
					this._IdPermisoRol = value;
					this.SendPropertyChanged("IdPermisoRol");
					this.OnIdPermisoRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int")]
		public System.Nullable<int> IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", DbType="Int")]
		public System.Nullable<int> IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					if (this._Permiso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_PermisoRol", Storage="_Permiso", ThisKey="IdPermiso", OtherKey="IdPermiso", IsForeignKey=true)]
		public Permiso Permiso
		{
			get
			{
				return this._Permiso.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso.Entity;
				if (((previousValue != value) 
							|| (this._Permiso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso.Entity = null;
						previousValue.PermisoRol.Remove(this);
					}
					this._Permiso.Entity = value;
					if ((value != null))
					{
						value.PermisoRol.Add(this);
						this._IdPermiso = value.IdPermiso;
					}
					else
					{
						this._IdPermiso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permiso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_PermisoRol", Storage="_Rol", ThisKey="IdRol", OtherKey="IdRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.PermisoRol.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.PermisoRol.Add(this);
						this._IdRol = value.IdRol;
					}
					else
					{
						this._IdRol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Precio")]
	public partial class Precio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPrecio;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<double> _PrecioCompra;
		
		private System.Nullable<double> _PrecioAnterior;
		
		private System.Nullable<double> _PorcentajeVenta;
		
		private System.Nullable<double> _PrecioPublicado;
		
		private string _Descripcion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPrecioChanging(int value);
    partial void OnIdPrecioChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnPrecioCompraChanging(System.Nullable<double> value);
    partial void OnPrecioCompraChanged();
    partial void OnPrecioAnteriorChanging(System.Nullable<double> value);
    partial void OnPrecioAnteriorChanged();
    partial void OnPorcentajeVentaChanging(System.Nullable<double> value);
    partial void OnPorcentajeVentaChanged();
    partial void OnPrecioPublicadoChanging(System.Nullable<double> value);
    partial void OnPrecioPublicadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Precio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPrecio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPrecio
		{
			get
			{
				return this._IdPrecio;
			}
			set
			{
				if ((this._IdPrecio != value))
				{
					this.OnIdPrecioChanging(value);
					this.SendPropertyChanging();
					this._IdPrecio = value;
					this.SendPropertyChanged("IdPrecio");
					this.OnIdPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioCompra", DbType="Float")]
		public System.Nullable<double> PrecioCompra
		{
			get
			{
				return this._PrecioCompra;
			}
			set
			{
				if ((this._PrecioCompra != value))
				{
					this.OnPrecioCompraChanging(value);
					this.SendPropertyChanging();
					this._PrecioCompra = value;
					this.SendPropertyChanged("PrecioCompra");
					this.OnPrecioCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioAnterior", DbType="Float")]
		public System.Nullable<double> PrecioAnterior
		{
			get
			{
				return this._PrecioAnterior;
			}
			set
			{
				if ((this._PrecioAnterior != value))
				{
					this.OnPrecioAnteriorChanging(value);
					this.SendPropertyChanging();
					this._PrecioAnterior = value;
					this.SendPropertyChanged("PrecioAnterior");
					this.OnPrecioAnteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PorcentajeVenta", DbType="Float")]
		public System.Nullable<double> PorcentajeVenta
		{
			get
			{
				return this._PorcentajeVenta;
			}
			set
			{
				if ((this._PorcentajeVenta != value))
				{
					this.OnPorcentajeVentaChanging(value);
					this.SendPropertyChanging();
					this._PorcentajeVenta = value;
					this.SendPropertyChanged("PorcentajeVenta");
					this.OnPorcentajeVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioPublicado", DbType="Float")]
		public System.Nullable<double> PrecioPublicado
		{
			get
			{
				return this._PrecioPublicado;
			}
			set
			{
				if ((this._PrecioPublicado != value))
				{
					this.OnPrecioPublicadoChanging(value);
					this.SendPropertyChanging();
					this._PrecioPublicado = value;
					this.SendPropertyChanged("PrecioPublicado");
					this.OnPrecioPublicadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProd;
		
		private string _Upc;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private string _Categoria;
		
		private string _TipoInstrumento;
		
		private System.Nullable<int> _IdMarca;
		
		private System.Nullable<int> _IdModelo;
		
		private string _CodProveedor;
		
		private System.Nullable<int> _IdProveedor;
		
		private string _Color;
		
		private string _Estado;
		
		private System.Nullable<double> _Precio;
		
		private EntitySet<ProductosxNP> _ProductosxNP;
		
		private EntitySet<ProductosxOC> _ProductosxOC;
		
		private EntityRef<Marca> _Marca;
		
		private EntityRef<Modelo> _Modelo;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProdChanging(int value);
    partial void OnIdProdChanged();
    partial void OnUpcChanging(string value);
    partial void OnUpcChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnTipoInstrumentoChanging(string value);
    partial void OnTipoInstrumentoChanged();
    partial void OnIdMarcaChanging(System.Nullable<int> value);
    partial void OnIdMarcaChanged();
    partial void OnIdModeloChanging(System.Nullable<int> value);
    partial void OnIdModeloChanged();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    partial void OnIdProveedorChanging(System.Nullable<int> value);
    partial void OnIdProveedorChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnPrecioChanging(System.Nullable<double> value);
    partial void OnPrecioChanged();
    #endregion
		
		public Producto()
		{
			this._ProductosxNP = new EntitySet<ProductosxNP>(new Action<ProductosxNP>(this.attach_ProductosxNP), new Action<ProductosxNP>(this.detach_ProductosxNP));
			this._ProductosxOC = new EntitySet<ProductosxOC>(new Action<ProductosxOC>(this.attach_ProductosxOC), new Action<ProductosxOC>(this.detach_ProductosxOC));
			this._Marca = default(EntityRef<Marca>);
			this._Modelo = default(EntityRef<Modelo>);
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProd
		{
			get
			{
				return this._IdProd;
			}
			set
			{
				if ((this._IdProd != value))
				{
					this.OnIdProdChanging(value);
					this.SendPropertyChanging();
					this._IdProd = value;
					this.SendPropertyChanged("IdProd");
					this.OnIdProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upc", DbType="VarChar(50)")]
		public string Upc
		{
			get
			{
				return this._Upc;
			}
			set
			{
				if ((this._Upc != value))
				{
					this.OnUpcChanging(value);
					this.SendPropertyChanging();
					this._Upc = value;
					this.SendPropertyChanged("Upc");
					this.OnUpcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(50)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoInstrumento", DbType="VarChar(50)")]
		public string TipoInstrumento
		{
			get
			{
				return this._TipoInstrumento;
			}
			set
			{
				if ((this._TipoInstrumento != value))
				{
					this.OnTipoInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._TipoInstrumento = value;
					this.SendPropertyChanged("TipoInstrumento");
					this.OnTipoInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMarca", DbType="Int")]
		public System.Nullable<int> IdMarca
		{
			get
			{
				return this._IdMarca;
			}
			set
			{
				if ((this._IdMarca != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMarcaChanging(value);
					this.SendPropertyChanging();
					this._IdMarca = value;
					this.SendPropertyChanged("IdMarca");
					this.OnIdMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdModelo", DbType="Int")]
		public System.Nullable<int> IdModelo
		{
			get
			{
				return this._IdModelo;
			}
			set
			{
				if ((this._IdModelo != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdModeloChanging(value);
					this.SendPropertyChanging();
					this._IdModelo = value;
					this.SendPropertyChanged("IdModelo");
					this.OnIdModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(50)")]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int")]
		public System.Nullable<int> IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Float")]
		public System.Nullable<double> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosxNP", Storage="_ProductosxNP", ThisKey="IdProd", OtherKey="IdProd")]
		public EntitySet<ProductosxNP> ProductosxNP
		{
			get
			{
				return this._ProductosxNP;
			}
			set
			{
				this._ProductosxNP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosxOC", Storage="_ProductosxOC", ThisKey="IdProd", OtherKey="IdProd")]
		public EntitySet<ProductosxOC> ProductosxOC
		{
			get
			{
				return this._ProductosxOC;
			}
			set
			{
				this._ProductosxOC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Producto", Storage="_Marca", ThisKey="IdMarca", OtherKey="IdMarca", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._IdMarca = value.IdMarca;
					}
					else
					{
						this._IdMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Producto", Storage="_Modelo", ThisKey="IdModelo", OtherKey="IdModelo", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._IdModelo = value.IdModelo;
					}
					else
					{
						this._IdModelo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Proveedor", ThisKey="IdProveedor", OtherKey="IdProveedor", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._IdProveedor = value.IdProveedor;
					}
					else
					{
						this._IdProveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductosxNP(ProductosxNP entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_ProductosxNP(ProductosxNP entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_ProductosxOC(ProductosxOC entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_ProductosxOC(ProductosxOC entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductosxNP")]
	public partial class ProductosxNP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProductosxNP;
		
		private System.Nullable<int> _IdProd;
		
		private System.Nullable<int> _NroPedido;
		
		private EntityRef<NotaDePedido> _NotaDePedido;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductosxNPChanging(int value);
    partial void OnIdProductosxNPChanged();
    partial void OnIdProdChanging(System.Nullable<int> value);
    partial void OnIdProdChanged();
    partial void OnNroPedidoChanging(System.Nullable<int> value);
    partial void OnNroPedidoChanged();
    #endregion
		
		public ProductosxNP()
		{
			this._NotaDePedido = default(EntityRef<NotaDePedido>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductosxNP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProductosxNP
		{
			get
			{
				return this._IdProductosxNP;
			}
			set
			{
				if ((this._IdProductosxNP != value))
				{
					this.OnIdProductosxNPChanging(value);
					this.SendPropertyChanging();
					this._IdProductosxNP = value;
					this.SendPropertyChanged("IdProductosxNP");
					this.OnIdProductosxNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProd", DbType="Int")]
		public System.Nullable<int> IdProd
		{
			get
			{
				return this._IdProd;
			}
			set
			{
				if ((this._IdProd != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdChanging(value);
					this.SendPropertyChanging();
					this._IdProd = value;
					this.SendPropertyChanged("IdProd");
					this.OnIdProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPedido", DbType="Int")]
		public System.Nullable<int> NroPedido
		{
			get
			{
				return this._NroPedido;
			}
			set
			{
				if ((this._NroPedido != value))
				{
					if (this._NotaDePedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroPedidoChanging(value);
					this.SendPropertyChanging();
					this._NroPedido = value;
					this.SendPropertyChanged("NroPedido");
					this.OnNroPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_ProductosxNP", Storage="_NotaDePedido", ThisKey="NroPedido", OtherKey="NroPedido", IsForeignKey=true)]
		public NotaDePedido NotaDePedido
		{
			get
			{
				return this._NotaDePedido.Entity;
			}
			set
			{
				NotaDePedido previousValue = this._NotaDePedido.Entity;
				if (((previousValue != value) 
							|| (this._NotaDePedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotaDePedido.Entity = null;
						previousValue.ProductosxNP.Remove(this);
					}
					this._NotaDePedido.Entity = value;
					if ((value != null))
					{
						value.ProductosxNP.Add(this);
						this._NroPedido = value.NroPedido;
					}
					else
					{
						this._NroPedido = default(Nullable<int>);
					}
					this.SendPropertyChanged("NotaDePedido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosxNP", Storage="_Producto", ThisKey="IdProd", OtherKey="IdProd", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.ProductosxNP.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.ProductosxNP.Add(this);
						this._IdProd = value.IdProd;
					}
					else
					{
						this._IdProd = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductosxOC")]
	public partial class ProductosxOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProductosxOC;
		
		private System.Nullable<int> _IdProd;
		
		private System.Nullable<int> _NroOrdenCompra;
		
		private EntityRef<OrdenCompra> _OrdenCompra;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductosxOCChanging(int value);
    partial void OnIdProductosxOCChanged();
    partial void OnIdProdChanging(System.Nullable<int> value);
    partial void OnIdProdChanged();
    partial void OnNroOrdenCompraChanging(System.Nullable<int> value);
    partial void OnNroOrdenCompraChanged();
    #endregion
		
		public ProductosxOC()
		{
			this._OrdenCompra = default(EntityRef<OrdenCompra>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductosxOC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProductosxOC
		{
			get
			{
				return this._IdProductosxOC;
			}
			set
			{
				if ((this._IdProductosxOC != value))
				{
					this.OnIdProductosxOCChanging(value);
					this.SendPropertyChanging();
					this._IdProductosxOC = value;
					this.SendPropertyChanged("IdProductosxOC");
					this.OnIdProductosxOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProd", DbType="Int")]
		public System.Nullable<int> IdProd
		{
			get
			{
				return this._IdProd;
			}
			set
			{
				if ((this._IdProd != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdChanging(value);
					this.SendPropertyChanging();
					this._IdProd = value;
					this.SendPropertyChanged("IdProd");
					this.OnIdProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroOrdenCompra", DbType="Int")]
		public System.Nullable<int> NroOrdenCompra
		{
			get
			{
				return this._NroOrdenCompra;
			}
			set
			{
				if ((this._NroOrdenCompra != value))
				{
					if (this._OrdenCompra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroOrdenCompraChanging(value);
					this.SendPropertyChanging();
					this._NroOrdenCompra = value;
					this.SendPropertyChanged("NroOrdenCompra");
					this.OnNroOrdenCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrdenCompra_ProductosxOC", Storage="_OrdenCompra", ThisKey="NroOrdenCompra", OtherKey="NroOrdenCompra", IsForeignKey=true)]
		public OrdenCompra OrdenCompra
		{
			get
			{
				return this._OrdenCompra.Entity;
			}
			set
			{
				OrdenCompra previousValue = this._OrdenCompra.Entity;
				if (((previousValue != value) 
							|| (this._OrdenCompra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdenCompra.Entity = null;
						previousValue.ProductosxOC.Remove(this);
					}
					this._OrdenCompra.Entity = value;
					if ((value != null))
					{
						value.ProductosxOC.Add(this);
						this._NroOrdenCompra = value.NroOrdenCompra;
					}
					else
					{
						this._NroOrdenCompra = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrdenCompra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosxOC", Storage="_Producto", ThisKey="IdProd", OtherKey="IdProd", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.ProductosxOC.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.ProductosxOC.Add(this);
						this._IdProd = value.IdProd;
					}
					else
					{
						this._IdProd = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProveedor;
		
		private string _CodProveedor;
		
		private string _NombreEmpresa;
		
		private string _RazonSocial;
		
		private string _Domicilio;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Cuit;
		
		private EntitySet<OrdenCompra> _OrdenCompra;
		
		private EntitySet<OrdenPago> _OrdenPago;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProveedorChanging(int value);
    partial void OnIdProveedorChanged();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    partial void OnNombreEmpresaChanging(string value);
    partial void OnNombreEmpresaChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnCuitChanging(System.Nullable<int> value);
    partial void OnCuitChanged();
    #endregion
		
		public Proveedor()
		{
			this._OrdenCompra = new EntitySet<OrdenCompra>(new Action<OrdenCompra>(this.attach_OrdenCompra), new Action<OrdenCompra>(this.detach_OrdenCompra));
			this._OrdenPago = new EntitySet<OrdenPago>(new Action<OrdenPago>(this.attach_OrdenPago), new Action<OrdenPago>(this.detach_OrdenPago));
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(50)")]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEmpresa", DbType="VarChar(50)")]
		public string NombreEmpresa
		{
			get
			{
				return this._NombreEmpresa;
			}
			set
			{
				if ((this._NombreEmpresa != value))
				{
					this.OnNombreEmpresaChanging(value);
					this.SendPropertyChanging();
					this._NombreEmpresa = value;
					this.SendPropertyChanged("NombreEmpresa");
					this.OnNombreEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RazonSocial", DbType="VarChar(50)")]
		public string RazonSocial
		{
			get
			{
				return this._RazonSocial;
			}
			set
			{
				if ((this._RazonSocial != value))
				{
					this.OnRazonSocialChanging(value);
					this.SendPropertyChanging();
					this._RazonSocial = value;
					this.SendPropertyChanged("RazonSocial");
					this.OnRazonSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domicilio", DbType="VarChar(50)")]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuit", DbType="Int")]
		public System.Nullable<int> Cuit
		{
			get
			{
				return this._Cuit;
			}
			set
			{
				if ((this._Cuit != value))
				{
					this.OnCuitChanging(value);
					this.SendPropertyChanging();
					this._Cuit = value;
					this.SendPropertyChanged("Cuit");
					this.OnCuitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_OrdenCompra", Storage="_OrdenCompra", ThisKey="IdProveedor", OtherKey="IdProveedor")]
		public EntitySet<OrdenCompra> OrdenCompra
		{
			get
			{
				return this._OrdenCompra;
			}
			set
			{
				this._OrdenCompra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_OrdenPago", Storage="_OrdenPago", ThisKey="IdProveedor", OtherKey="IdProveedor")]
		public EntitySet<OrdenPago> OrdenPago
		{
			get
			{
				return this._OrdenPago;
			}
			set
			{
				this._OrdenPago.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Producto", ThisKey="IdProveedor", OtherKey="IdProveedor")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_OrdenCompra(OrdenCompra entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
		
		private void attach_OrdenPago(OrdenPago entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_OrdenPago(OrdenPago entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recibo")]
	public partial class Recibo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroRecibo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _CodCliente;
		
		private string _Descripcion;
		
		private System.Nullable<double> _ImporteTotal;
		
		private string _Notas;
		
		private string _Estado;
		
		private System.Nullable<int> _NroFactura;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroReciboChanging(int value);
    partial void OnNroReciboChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnCodClienteChanging(System.Nullable<int> value);
    partial void OnCodClienteChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnImporteTotalChanging(System.Nullable<double> value);
    partial void OnImporteTotalChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnNroFacturaChanging(System.Nullable<int> value);
    partial void OnNroFacturaChanged();
    #endregion
		
		public Recibo()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Factura = default(EntityRef<Factura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroRecibo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroRecibo
		{
			get
			{
				return this._NroRecibo;
			}
			set
			{
				if ((this._NroRecibo != value))
				{
					this.OnNroReciboChanging(value);
					this.SendPropertyChanging();
					this._NroRecibo = value;
					this.SendPropertyChanged("NroRecibo");
					this.OnNroReciboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int")]
		public System.Nullable<int> CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImporteTotal", DbType="Float")]
		public System.Nullable<double> ImporteTotal
		{
			get
			{
				return this._ImporteTotal;
			}
			set
			{
				if ((this._ImporteTotal != value))
				{
					this.OnImporteTotalChanging(value);
					this.SendPropertyChanging();
					this._ImporteTotal = value;
					this.SendPropertyChanged("ImporteTotal");
					this.OnImporteTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(50)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroFactura", DbType="Int")]
		public System.Nullable<int> NroFactura
		{
			get
			{
				return this._NroFactura;
			}
			set
			{
				if ((this._NroFactura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroFacturaChanging(value);
					this.SendPropertyChanging();
					this._NroFactura = value;
					this.SendPropertyChanged("NroFactura");
					this.OnNroFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Recibo", Storage="_Cliente", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Recibo.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Recibo.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Recibo", Storage="_Factura", ThisKey="NroFactura", OtherKey="NroFactura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Recibo.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Recibo.Add(this);
						this._NroFactura = value.NroFactura;
					}
					else
					{
						this._NroFactura = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Remito")]
	public partial class Remito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NroRemito;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _NroPedido;
		
		private System.Nullable<int> _NroFactura;
		
		private string _Descripcion;
		
		private string _Notas;
		
		private string _Estado;
		
		private EntityRef<Factura> _Factura;
		
		private EntityRef<NotaDePedido> _NotaDePedido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroRemitoChanging(int value);
    partial void OnNroRemitoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnNroPedidoChanging(System.Nullable<int> value);
    partial void OnNroPedidoChanged();
    partial void OnNroFacturaChanging(System.Nullable<int> value);
    partial void OnNroFacturaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Remito()
		{
			this._Factura = default(EntityRef<Factura>);
			this._NotaDePedido = default(EntityRef<NotaDePedido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroRemito", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NroRemito
		{
			get
			{
				return this._NroRemito;
			}
			set
			{
				if ((this._NroRemito != value))
				{
					this.OnNroRemitoChanging(value);
					this.SendPropertyChanging();
					this._NroRemito = value;
					this.SendPropertyChanged("NroRemito");
					this.OnNroRemitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPedido", DbType="Int")]
		public System.Nullable<int> NroPedido
		{
			get
			{
				return this._NroPedido;
			}
			set
			{
				if ((this._NroPedido != value))
				{
					if (this._NotaDePedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroPedidoChanging(value);
					this.SendPropertyChanging();
					this._NroPedido = value;
					this.SendPropertyChanged("NroPedido");
					this.OnNroPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroFactura", DbType="Int")]
		public System.Nullable<int> NroFactura
		{
			get
			{
				return this._NroFactura;
			}
			set
			{
				if ((this._NroFactura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNroFacturaChanging(value);
					this.SendPropertyChanging();
					this._NroFactura = value;
					this.SendPropertyChanged("NroFactura");
					this.OnNroFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="VarChar(50)")]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Remito", Storage="_Factura", ThisKey="NroFactura", OtherKey="NroFactura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Remito.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Remito.Add(this);
						this._NroFactura = value.NroFactura;
					}
					else
					{
						this._NroFactura = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotaDePedido_Remito", Storage="_NotaDePedido", ThisKey="NroPedido", OtherKey="NroPedido", IsForeignKey=true)]
		public NotaDePedido NotaDePedido
		{
			get
			{
				return this._NotaDePedido.Entity;
			}
			set
			{
				NotaDePedido previousValue = this._NotaDePedido.Entity;
				if (((previousValue != value) 
							|| (this._NotaDePedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotaDePedido.Entity = null;
						previousValue.Remito.Remove(this);
					}
					this._NotaDePedido.Entity = value;
					if ((value != null))
					{
						value.Remito.Add(this);
						this._NroPedido = value.NroPedido;
					}
					else
					{
						this._NroPedido = default(Nullable<int>);
					}
					this.SendPropertyChanged("NotaDePedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdRol;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private string _TipoRol;
		
		private EntitySet<PermisoRol> _PermisoRol;
		
		private EntitySet<UsuarioRol> _UsuarioRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRolChanging(int value);
    partial void OnIdRolChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTipoRolChanging(string value);
    partial void OnTipoRolChanged();
    #endregion
		
		public Rol()
		{
			this._PermisoRol = new EntitySet<PermisoRol>(new Action<PermisoRol>(this.attach_PermisoRol), new Action<PermisoRol>(this.detach_PermisoRol));
			this._UsuarioRol = new EntitySet<UsuarioRol>(new Action<UsuarioRol>(this.attach_UsuarioRol), new Action<UsuarioRol>(this.detach_UsuarioRol));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoRol", DbType="VarChar(50)")]
		public string TipoRol
		{
			get
			{
				return this._TipoRol;
			}
			set
			{
				if ((this._TipoRol != value))
				{
					this.OnTipoRolChanging(value);
					this.SendPropertyChanging();
					this._TipoRol = value;
					this.SendPropertyChanged("TipoRol");
					this.OnTipoRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_PermisoRol", Storage="_PermisoRol", ThisKey="IdRol", OtherKey="IdRol")]
		public EntitySet<PermisoRol> PermisoRol
		{
			get
			{
				return this._PermisoRol;
			}
			set
			{
				this._PermisoRol.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioRol", Storage="_UsuarioRol", ThisKey="IdRol", OtherKey="IdRol")]
		public EntitySet<UsuarioRol> UsuarioRol
		{
			get
			{
				return this._UsuarioRol;
			}
			set
			{
				this._UsuarioRol.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_PermisoRol(PermisoRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Traduccion")]
	public partial class Traduccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTraduccion;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IdIdioma;
		
		private System.Nullable<int> _IdControl;
		
		private EntityRef<ControlSistema> _ControlSistema;
		
		private EntityRef<Idioma> _Idioma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTraduccionChanging(int value);
    partial void OnIdTraduccionChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIdIdiomaChanging(System.Nullable<int> value);
    partial void OnIdIdiomaChanged();
    partial void OnIdControlChanging(System.Nullable<int> value);
    partial void OnIdControlChanged();
    #endregion
		
		public Traduccion()
		{
			this._ControlSistema = default(EntityRef<ControlSistema>);
			this._Idioma = default(EntityRef<Idioma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTraduccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTraduccion
		{
			get
			{
				return this._IdTraduccion;
			}
			set
			{
				if ((this._IdTraduccion != value))
				{
					this.OnIdTraduccionChanging(value);
					this.SendPropertyChanging();
					this._IdTraduccion = value;
					this.SendPropertyChanged("IdTraduccion");
					this.OnIdTraduccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIdioma", DbType="Int")]
		public System.Nullable<int> IdIdioma
		{
			get
			{
				return this._IdIdioma;
			}
			set
			{
				if ((this._IdIdioma != value))
				{
					if (this._Idioma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdIdiomaChanging(value);
					this.SendPropertyChanging();
					this._IdIdioma = value;
					this.SendPropertyChanged("IdIdioma");
					this.OnIdIdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdControl", DbType="Int")]
		public System.Nullable<int> IdControl
		{
			get
			{
				return this._IdControl;
			}
			set
			{
				if ((this._IdControl != value))
				{
					if (this._ControlSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdControlChanging(value);
					this.SendPropertyChanging();
					this._IdControl = value;
					this.SendPropertyChanged("IdControl");
					this.OnIdControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlSistema_Traduccion", Storage="_ControlSistema", ThisKey="IdControl", OtherKey="IdControl", IsForeignKey=true)]
		public ControlSistema ControlSistema
		{
			get
			{
				return this._ControlSistema.Entity;
			}
			set
			{
				ControlSistema previousValue = this._ControlSistema.Entity;
				if (((previousValue != value) 
							|| (this._ControlSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlSistema.Entity = null;
						previousValue.Traduccion.Remove(this);
					}
					this._ControlSistema.Entity = value;
					if ((value != null))
					{
						value.Traduccion.Add(this);
						this._IdControl = value.IdControl;
					}
					else
					{
						this._IdControl = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlSistema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Traduccion", Storage="_Idioma", ThisKey="IdIdioma", OtherKey="IdIdioma", IsForeignKey=true)]
		public Idioma Idioma
		{
			get
			{
				return this._Idioma.Entity;
			}
			set
			{
				Idioma previousValue = this._Idioma.Entity;
				if (((previousValue != value) 
							|| (this._Idioma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idioma.Entity = null;
						previousValue.Traduccion.Remove(this);
					}
					this._Idioma.Entity = value;
					if ((value != null))
					{
						value.Traduccion.Add(this);
						this._IdIdioma = value.IdIdioma;
					}
					else
					{
						this._IdIdioma = default(Nullable<int>);
					}
					this.SendPropertyChanged("Idioma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Usuario1;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Pass;
		
		private string _Estado;
		
		private System.Nullable<int> _IdIdioma;
		
		private System.Nullable<int> _Dni;
		
		private EntitySet<UsuarioRol> _UsuarioRol;
		
		private EntityRef<Idioma> _Idioma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnIdIdiomaChanging(System.Nullable<int> value);
    partial void OnIdIdiomaChanged();
    partial void OnDniChanging(System.Nullable<int> value);
    partial void OnDniChanged();
    #endregion
		
		public Usuario()
		{
			this._UsuarioRol = new EntitySet<UsuarioRol>(new Action<UsuarioRol>(this.attach_UsuarioRol), new Action<UsuarioRol>(this.detach_UsuarioRol));
			this._Idioma = default(EntityRef<Idioma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIdioma", DbType="Int")]
		public System.Nullable<int> IdIdioma
		{
			get
			{
				return this._IdIdioma;
			}
			set
			{
				if ((this._IdIdioma != value))
				{
					if (this._Idioma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdIdiomaChanging(value);
					this.SendPropertyChanging();
					this._IdIdioma = value;
					this.SendPropertyChanged("IdIdioma");
					this.OnIdIdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dni", DbType="Int")]
		public System.Nullable<int> Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioRol", Storage="_UsuarioRol", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<UsuarioRol> UsuarioRol
		{
			get
			{
				return this._UsuarioRol;
			}
			set
			{
				this._UsuarioRol.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Usuario", Storage="_Idioma", ThisKey="IdIdioma", OtherKey="IdIdioma", IsForeignKey=true)]
		public Idioma Idioma
		{
			get
			{
				return this._Idioma.Entity;
			}
			set
			{
				Idioma previousValue = this._Idioma.Entity;
				if (((previousValue != value) 
							|| (this._Idioma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idioma.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Idioma.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdIdioma = value.IdIdioma;
					}
					else
					{
						this._IdIdioma = default(Nullable<int>);
					}
					this.SendPropertyChanged("Idioma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuarioRol")]
	public partial class UsuarioRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuarioRol;
		
		private System.Nullable<int> _IdUsuario;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IdRol;
		
		private EntityRef<Rol> _Rol;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioRolChanging(int value);
    partial void OnIdUsuarioRolChanged();
    partial void OnIdUsuarioChanging(System.Nullable<int> value);
    partial void OnIdUsuarioChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIdRolChanging(System.Nullable<int> value);
    partial void OnIdRolChanged();
    #endregion
		
		public UsuarioRol()
		{
			this._Rol = default(EntityRef<Rol>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuarioRol
		{
			get
			{
				return this._IdUsuarioRol;
			}
			set
			{
				if ((this._IdUsuarioRol != value))
				{
					this.OnIdUsuarioRolChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioRol = value;
					this.SendPropertyChanged("IdUsuarioRol");
					this.OnIdUsuarioRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int")]
		public System.Nullable<int> IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRol", DbType="Int")]
		public System.Nullable<int> IdRol
		{
			get
			{
				return this._IdRol;
			}
			set
			{
				if ((this._IdRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRolChanging(value);
					this.SendPropertyChanging();
					this._IdRol = value;
					this.SendPropertyChanged("IdRol");
					this.OnIdRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioRol", Storage="_Rol", ThisKey="IdRol", OtherKey="IdRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.UsuarioRol.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.UsuarioRol.Add(this);
						this._IdRol = value.IdRol;
					}
					else
					{
						this._IdRol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioRol", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioRol.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioRol.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
